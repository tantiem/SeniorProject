//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/MainActionMap.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace MainActionMap
{
    public partial class @MainActionMap : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @MainActionMap()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""MainActionMap"",
    ""maps"": [
        {
            ""name"": ""PlayerActionMap"",
            ""id"": ""b1d99fd5-3764-479f-8f3d-9c4f82fad9b9"",
            ""actions"": [
                {
                    ""name"": ""MoveAndAim"",
                    ""type"": ""Value"",
                    ""id"": ""4716dddb-1978-4b10-9bd9-466e9751e4ba"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""b1373a77-ffcf-4efd-9641-683970813fb6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Slash"",
                    ""type"": ""Button"",
                    ""id"": ""53a4bf66-8b9c-4dd2-b065-28750ddc9f9f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SlashThrow"",
                    ""type"": ""Button"",
                    ""id"": ""861c6229-2a11-4129-8565-413f66225688"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""SlowTap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StabThrow"",
                    ""type"": ""Button"",
                    ""id"": ""8b02713f-10d1-4ca1-95d2-12c58ca76352"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""SlowTap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Stab"",
                    ""type"": ""Button"",
                    ""id"": ""c65b0dc3-f59d-4b00-ad6b-31783035c569"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Kick"",
                    ""type"": ""Button"",
                    ""id"": ""1b64b385-3a91-491e-8d73-95924f09e5b5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Guard"",
                    ""type"": ""Button"",
                    ""id"": ""02eb6d79-9d68-432b-bbbe-e956899401c0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Taunt"",
                    ""type"": ""Button"",
                    ""id"": ""3d314b50-6009-41f3-bcd5-a299096f326a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Accelerate"",
                    ""type"": ""Button"",
                    ""id"": ""504d8286-9889-4d30-9d39-b209f6140af3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b537e932-34b6-43da-8e9a-9098eba6baf3"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": ""Controller"",
                    ""action"": ""MoveAndAim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""fe4ce6fd-4d1a-48e7-be28-af80b939a8c5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveAndAim"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""815721d0-c5e3-4657-98db-041f2085a4aa"",
                    ""path"": ""<Keyboard>/#(W)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardPlayer"",
                    ""action"": ""MoveAndAim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""982d74cd-decb-4ec8-be48-37ae07477435"",
                    ""path"": ""<Keyboard>/#(S)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardPlayer"",
                    ""action"": ""MoveAndAim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""380c2ce5-7ca6-47c7-80ee-bb8f5f864570"",
                    ""path"": ""<Keyboard>/#(A)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardPlayer"",
                    ""action"": ""MoveAndAim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""8607a295-47d0-4956-bcb6-77d401d0af0d"",
                    ""path"": ""<Keyboard>/#(D)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardPlayer"",
                    ""action"": ""MoveAndAim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7be8a0af-3298-4833-b5b0-99bfa8718cb6"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e41da956-0621-4363-81f2-ffb8c7742783"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardPlayer"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b39e4cb6-0827-4929-8474-f0c16a8c1ab6"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Slash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7c98eb85-ced8-4715-9585-bd7170e42da9"",
                    ""path"": ""<Keyboard>/#(H)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardPlayer"",
                    ""action"": ""Slash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""77d9af03-fe49-46ad-9faa-0d28338c4432"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""SlashThrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3ec13908-68cc-4edb-8e1e-5c13f4f66670"",
                    ""path"": ""<Keyboard>/#(H)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardPlayer"",
                    ""action"": ""SlashThrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3dfcffee-2a7c-4e58-acb7-42fde38ebd77"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""StabThrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ddab289c-39de-4f19-afbd-d9d2735f2edd"",
                    ""path"": ""<Keyboard>/#(J)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardPlayer"",
                    ""action"": ""StabThrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e6bd2471-d6b1-4c97-80ce-ff83a04441a1"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Stab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""363d2028-b39b-4bff-8f94-2496e987b290"",
                    ""path"": ""<Keyboard>/#(J)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardPlayer"",
                    ""action"": ""Stab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b08a1fe-e12f-498e-b2a9-3b9ffa011082"",
                    ""path"": ""<Keyboard>/#(K)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardPlayer"",
                    ""action"": ""Kick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4f8af7e8-8023-4b1c-81a3-67b0b87aa73b"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Kick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f6ff6183-80da-440e-9066-54382a010b7e"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Guard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bce3978f-ce27-44a6-b317-1cd08972fd23"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardPlayer"",
                    ""action"": ""Guard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""71c68ed0-ef36-4d4c-beb0-4d19adacd369"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardPlayer"",
                    ""action"": ""Taunt"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7e3b58dc-c235-46c2-885d-f1b372a83b39"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Taunt"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e6cbecad-d8e2-4511-a2c5-19cb1dedca21"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Accelerate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""681bfe9f-2513-4638-abcf-310c00fa8158"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardPlayer"",
                    ""action"": ""Accelerate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UIActionMap"",
            ""id"": ""a7b271ca-d92f-42e2-bd1c-c12350190ad9"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""81ceafb7-3fcf-40d9-bc36-8f053986b14b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""3126a900-451b-4a6d-bb68-87db28d3da90"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""0f6a961f-429a-4539-8848-6a3c05bb68c1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Point"",
                    ""type"": ""PassThrough"",
                    ""id"": ""ac3f6173-80f0-49b5-bcc7-5efe3d0a6ec8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""PassThrough"",
                    ""id"": ""eba93e06-3591-4882-9133-45c92f7828ae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ScrollWheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""2de64ec2-23de-4e0f-8e2c-edeafccb0b28"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""d49f2c17-3a2b-454a-9552-c71b0e1aa7d7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""916308e3-e014-4630-a814-650c54eb9538"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""b7b49ac8-4c0e-4eac-97da-c005e2764d47"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c92f71db-3f7c-4319-a707-67424c144545"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8b5e34e8-8ff5-48f5-bfbd-afb9d6647e3f"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""693066df-7f40-4354-b621-fac6e5734353"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""bf006896-320c-4721-b629-3ce784869dba"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""ad1bfda6-bc7b-46d4-a5b2-3811cf61112e"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""2258c5d1-c179-400e-a463-06d62efa86a5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""92eeb41f-874c-4b02-a3f0-c7bd73105755"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardPlayer"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2cec13a6-7950-4ba9-bbc1-dd37882d0c1d"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardPlayer"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b9778be9-b40c-40bf-b039-3c2620105c54"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardPlayer"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""303ebd72-8ddb-44d1-9902-1601a7e79cfa"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardPlayer"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3a7ff010-1e96-490f-9d0b-29b275279fd3"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardPlayer"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""6cbd082e-4e85-4a11-b8e2-236458a3e0a9"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardPlayer"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3b1885aa-8523-4f98-84db-d85d5df6db58"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardPlayer"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""235d39bb-30f7-446c-904b-08fb2729d92e"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardPlayer"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""397fb55a-9ec0-4552-b28f-ff44ea1e1ee5"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b198ef6-4d05-4b23-8aef-4c3ab35359ed"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardPlayer"",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""06d3625d-b59a-47e2-9f6b-65bcbce1338d"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""770ed300-6eb7-44a4-bbb5-65787f266255"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardPlayer"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a9ab9471-71e6-4401-bbd8-bb8ba8801caf"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8dfb55b4-bb93-431f-af70-8d8e12ccc023"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a36a5ab9-718c-45b8-9a44-35a61d1b4bb8"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38f2b0ed-a288-4128-b72f-247cefbd9e0c"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MiddleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9fe51303-871a-4856-8857-215141e7a3d4"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""KeyboardPlayer"",
            ""bindingGroup"": ""KeyboardPlayer"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Controller"",
            ""bindingGroup"": ""Controller"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<SwitchProControllerHID>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
            // PlayerActionMap
            m_PlayerActionMap = asset.FindActionMap("PlayerActionMap", throwIfNotFound: true);
            m_PlayerActionMap_MoveAndAim = m_PlayerActionMap.FindAction("MoveAndAim", throwIfNotFound: true);
            m_PlayerActionMap_Jump = m_PlayerActionMap.FindAction("Jump", throwIfNotFound: true);
            m_PlayerActionMap_Slash = m_PlayerActionMap.FindAction("Slash", throwIfNotFound: true);
            m_PlayerActionMap_SlashThrow = m_PlayerActionMap.FindAction("SlashThrow", throwIfNotFound: true);
            m_PlayerActionMap_StabThrow = m_PlayerActionMap.FindAction("StabThrow", throwIfNotFound: true);
            m_PlayerActionMap_Stab = m_PlayerActionMap.FindAction("Stab", throwIfNotFound: true);
            m_PlayerActionMap_Kick = m_PlayerActionMap.FindAction("Kick", throwIfNotFound: true);
            m_PlayerActionMap_Guard = m_PlayerActionMap.FindAction("Guard", throwIfNotFound: true);
            m_PlayerActionMap_Taunt = m_PlayerActionMap.FindAction("Taunt", throwIfNotFound: true);
            m_PlayerActionMap_Accelerate = m_PlayerActionMap.FindAction("Accelerate", throwIfNotFound: true);
            // UIActionMap
            m_UIActionMap = asset.FindActionMap("UIActionMap", throwIfNotFound: true);
            m_UIActionMap_Navigate = m_UIActionMap.FindAction("Navigate", throwIfNotFound: true);
            m_UIActionMap_Submit = m_UIActionMap.FindAction("Submit", throwIfNotFound: true);
            m_UIActionMap_Cancel = m_UIActionMap.FindAction("Cancel", throwIfNotFound: true);
            m_UIActionMap_Point = m_UIActionMap.FindAction("Point", throwIfNotFound: true);
            m_UIActionMap_Click = m_UIActionMap.FindAction("Click", throwIfNotFound: true);
            m_UIActionMap_ScrollWheel = m_UIActionMap.FindAction("ScrollWheel", throwIfNotFound: true);
            m_UIActionMap_MiddleClick = m_UIActionMap.FindAction("MiddleClick", throwIfNotFound: true);
            m_UIActionMap_RightClick = m_UIActionMap.FindAction("RightClick", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // PlayerActionMap
        private readonly InputActionMap m_PlayerActionMap;
        private IPlayerActionMapActions m_PlayerActionMapActionsCallbackInterface;
        private readonly InputAction m_PlayerActionMap_MoveAndAim;
        private readonly InputAction m_PlayerActionMap_Jump;
        private readonly InputAction m_PlayerActionMap_Slash;
        private readonly InputAction m_PlayerActionMap_SlashThrow;
        private readonly InputAction m_PlayerActionMap_StabThrow;
        private readonly InputAction m_PlayerActionMap_Stab;
        private readonly InputAction m_PlayerActionMap_Kick;
        private readonly InputAction m_PlayerActionMap_Guard;
        private readonly InputAction m_PlayerActionMap_Taunt;
        private readonly InputAction m_PlayerActionMap_Accelerate;
        public struct PlayerActionMapActions
        {
            private @MainActionMap m_Wrapper;
            public PlayerActionMapActions(@MainActionMap wrapper) { m_Wrapper = wrapper; }
            public InputAction @MoveAndAim => m_Wrapper.m_PlayerActionMap_MoveAndAim;
            public InputAction @Jump => m_Wrapper.m_PlayerActionMap_Jump;
            public InputAction @Slash => m_Wrapper.m_PlayerActionMap_Slash;
            public InputAction @SlashThrow => m_Wrapper.m_PlayerActionMap_SlashThrow;
            public InputAction @StabThrow => m_Wrapper.m_PlayerActionMap_StabThrow;
            public InputAction @Stab => m_Wrapper.m_PlayerActionMap_Stab;
            public InputAction @Kick => m_Wrapper.m_PlayerActionMap_Kick;
            public InputAction @Guard => m_Wrapper.m_PlayerActionMap_Guard;
            public InputAction @Taunt => m_Wrapper.m_PlayerActionMap_Taunt;
            public InputAction @Accelerate => m_Wrapper.m_PlayerActionMap_Accelerate;
            public InputActionMap Get() { return m_Wrapper.m_PlayerActionMap; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(PlayerActionMapActions set) { return set.Get(); }
            public void SetCallbacks(IPlayerActionMapActions instance)
            {
                if (m_Wrapper.m_PlayerActionMapActionsCallbackInterface != null)
                {
                    @MoveAndAim.started -= m_Wrapper.m_PlayerActionMapActionsCallbackInterface.OnMoveAndAim;
                    @MoveAndAim.performed -= m_Wrapper.m_PlayerActionMapActionsCallbackInterface.OnMoveAndAim;
                    @MoveAndAim.canceled -= m_Wrapper.m_PlayerActionMapActionsCallbackInterface.OnMoveAndAim;
                    @Jump.started -= m_Wrapper.m_PlayerActionMapActionsCallbackInterface.OnJump;
                    @Jump.performed -= m_Wrapper.m_PlayerActionMapActionsCallbackInterface.OnJump;
                    @Jump.canceled -= m_Wrapper.m_PlayerActionMapActionsCallbackInterface.OnJump;
                    @Slash.started -= m_Wrapper.m_PlayerActionMapActionsCallbackInterface.OnSlash;
                    @Slash.performed -= m_Wrapper.m_PlayerActionMapActionsCallbackInterface.OnSlash;
                    @Slash.canceled -= m_Wrapper.m_PlayerActionMapActionsCallbackInterface.OnSlash;
                    @SlashThrow.started -= m_Wrapper.m_PlayerActionMapActionsCallbackInterface.OnSlashThrow;
                    @SlashThrow.performed -= m_Wrapper.m_PlayerActionMapActionsCallbackInterface.OnSlashThrow;
                    @SlashThrow.canceled -= m_Wrapper.m_PlayerActionMapActionsCallbackInterface.OnSlashThrow;
                    @StabThrow.started -= m_Wrapper.m_PlayerActionMapActionsCallbackInterface.OnStabThrow;
                    @StabThrow.performed -= m_Wrapper.m_PlayerActionMapActionsCallbackInterface.OnStabThrow;
                    @StabThrow.canceled -= m_Wrapper.m_PlayerActionMapActionsCallbackInterface.OnStabThrow;
                    @Stab.started -= m_Wrapper.m_PlayerActionMapActionsCallbackInterface.OnStab;
                    @Stab.performed -= m_Wrapper.m_PlayerActionMapActionsCallbackInterface.OnStab;
                    @Stab.canceled -= m_Wrapper.m_PlayerActionMapActionsCallbackInterface.OnStab;
                    @Kick.started -= m_Wrapper.m_PlayerActionMapActionsCallbackInterface.OnKick;
                    @Kick.performed -= m_Wrapper.m_PlayerActionMapActionsCallbackInterface.OnKick;
                    @Kick.canceled -= m_Wrapper.m_PlayerActionMapActionsCallbackInterface.OnKick;
                    @Guard.started -= m_Wrapper.m_PlayerActionMapActionsCallbackInterface.OnGuard;
                    @Guard.performed -= m_Wrapper.m_PlayerActionMapActionsCallbackInterface.OnGuard;
                    @Guard.canceled -= m_Wrapper.m_PlayerActionMapActionsCallbackInterface.OnGuard;
                    @Taunt.started -= m_Wrapper.m_PlayerActionMapActionsCallbackInterface.OnTaunt;
                    @Taunt.performed -= m_Wrapper.m_PlayerActionMapActionsCallbackInterface.OnTaunt;
                    @Taunt.canceled -= m_Wrapper.m_PlayerActionMapActionsCallbackInterface.OnTaunt;
                    @Accelerate.started -= m_Wrapper.m_PlayerActionMapActionsCallbackInterface.OnAccelerate;
                    @Accelerate.performed -= m_Wrapper.m_PlayerActionMapActionsCallbackInterface.OnAccelerate;
                    @Accelerate.canceled -= m_Wrapper.m_PlayerActionMapActionsCallbackInterface.OnAccelerate;
                }
                m_Wrapper.m_PlayerActionMapActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @MoveAndAim.started += instance.OnMoveAndAim;
                    @MoveAndAim.performed += instance.OnMoveAndAim;
                    @MoveAndAim.canceled += instance.OnMoveAndAim;
                    @Jump.started += instance.OnJump;
                    @Jump.performed += instance.OnJump;
                    @Jump.canceled += instance.OnJump;
                    @Slash.started += instance.OnSlash;
                    @Slash.performed += instance.OnSlash;
                    @Slash.canceled += instance.OnSlash;
                    @SlashThrow.started += instance.OnSlashThrow;
                    @SlashThrow.performed += instance.OnSlashThrow;
                    @SlashThrow.canceled += instance.OnSlashThrow;
                    @StabThrow.started += instance.OnStabThrow;
                    @StabThrow.performed += instance.OnStabThrow;
                    @StabThrow.canceled += instance.OnStabThrow;
                    @Stab.started += instance.OnStab;
                    @Stab.performed += instance.OnStab;
                    @Stab.canceled += instance.OnStab;
                    @Kick.started += instance.OnKick;
                    @Kick.performed += instance.OnKick;
                    @Kick.canceled += instance.OnKick;
                    @Guard.started += instance.OnGuard;
                    @Guard.performed += instance.OnGuard;
                    @Guard.canceled += instance.OnGuard;
                    @Taunt.started += instance.OnTaunt;
                    @Taunt.performed += instance.OnTaunt;
                    @Taunt.canceled += instance.OnTaunt;
                    @Accelerate.started += instance.OnAccelerate;
                    @Accelerate.performed += instance.OnAccelerate;
                    @Accelerate.canceled += instance.OnAccelerate;
                }
            }
        }
        public PlayerActionMapActions @PlayerActionMap => new PlayerActionMapActions(this);

        // UIActionMap
        private readonly InputActionMap m_UIActionMap;
        private IUIActionMapActions m_UIActionMapActionsCallbackInterface;
        private readonly InputAction m_UIActionMap_Navigate;
        private readonly InputAction m_UIActionMap_Submit;
        private readonly InputAction m_UIActionMap_Cancel;
        private readonly InputAction m_UIActionMap_Point;
        private readonly InputAction m_UIActionMap_Click;
        private readonly InputAction m_UIActionMap_ScrollWheel;
        private readonly InputAction m_UIActionMap_MiddleClick;
        private readonly InputAction m_UIActionMap_RightClick;
        public struct UIActionMapActions
        {
            private @MainActionMap m_Wrapper;
            public UIActionMapActions(@MainActionMap wrapper) { m_Wrapper = wrapper; }
            public InputAction @Navigate => m_Wrapper.m_UIActionMap_Navigate;
            public InputAction @Submit => m_Wrapper.m_UIActionMap_Submit;
            public InputAction @Cancel => m_Wrapper.m_UIActionMap_Cancel;
            public InputAction @Point => m_Wrapper.m_UIActionMap_Point;
            public InputAction @Click => m_Wrapper.m_UIActionMap_Click;
            public InputAction @ScrollWheel => m_Wrapper.m_UIActionMap_ScrollWheel;
            public InputAction @MiddleClick => m_Wrapper.m_UIActionMap_MiddleClick;
            public InputAction @RightClick => m_Wrapper.m_UIActionMap_RightClick;
            public InputActionMap Get() { return m_Wrapper.m_UIActionMap; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(UIActionMapActions set) { return set.Get(); }
            public void SetCallbacks(IUIActionMapActions instance)
            {
                if (m_Wrapper.m_UIActionMapActionsCallbackInterface != null)
                {
                    @Navigate.started -= m_Wrapper.m_UIActionMapActionsCallbackInterface.OnNavigate;
                    @Navigate.performed -= m_Wrapper.m_UIActionMapActionsCallbackInterface.OnNavigate;
                    @Navigate.canceled -= m_Wrapper.m_UIActionMapActionsCallbackInterface.OnNavigate;
                    @Submit.started -= m_Wrapper.m_UIActionMapActionsCallbackInterface.OnSubmit;
                    @Submit.performed -= m_Wrapper.m_UIActionMapActionsCallbackInterface.OnSubmit;
                    @Submit.canceled -= m_Wrapper.m_UIActionMapActionsCallbackInterface.OnSubmit;
                    @Cancel.started -= m_Wrapper.m_UIActionMapActionsCallbackInterface.OnCancel;
                    @Cancel.performed -= m_Wrapper.m_UIActionMapActionsCallbackInterface.OnCancel;
                    @Cancel.canceled -= m_Wrapper.m_UIActionMapActionsCallbackInterface.OnCancel;
                    @Point.started -= m_Wrapper.m_UIActionMapActionsCallbackInterface.OnPoint;
                    @Point.performed -= m_Wrapper.m_UIActionMapActionsCallbackInterface.OnPoint;
                    @Point.canceled -= m_Wrapper.m_UIActionMapActionsCallbackInterface.OnPoint;
                    @Click.started -= m_Wrapper.m_UIActionMapActionsCallbackInterface.OnClick;
                    @Click.performed -= m_Wrapper.m_UIActionMapActionsCallbackInterface.OnClick;
                    @Click.canceled -= m_Wrapper.m_UIActionMapActionsCallbackInterface.OnClick;
                    @ScrollWheel.started -= m_Wrapper.m_UIActionMapActionsCallbackInterface.OnScrollWheel;
                    @ScrollWheel.performed -= m_Wrapper.m_UIActionMapActionsCallbackInterface.OnScrollWheel;
                    @ScrollWheel.canceled -= m_Wrapper.m_UIActionMapActionsCallbackInterface.OnScrollWheel;
                    @MiddleClick.started -= m_Wrapper.m_UIActionMapActionsCallbackInterface.OnMiddleClick;
                    @MiddleClick.performed -= m_Wrapper.m_UIActionMapActionsCallbackInterface.OnMiddleClick;
                    @MiddleClick.canceled -= m_Wrapper.m_UIActionMapActionsCallbackInterface.OnMiddleClick;
                    @RightClick.started -= m_Wrapper.m_UIActionMapActionsCallbackInterface.OnRightClick;
                    @RightClick.performed -= m_Wrapper.m_UIActionMapActionsCallbackInterface.OnRightClick;
                    @RightClick.canceled -= m_Wrapper.m_UIActionMapActionsCallbackInterface.OnRightClick;
                }
                m_Wrapper.m_UIActionMapActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Navigate.started += instance.OnNavigate;
                    @Navigate.performed += instance.OnNavigate;
                    @Navigate.canceled += instance.OnNavigate;
                    @Submit.started += instance.OnSubmit;
                    @Submit.performed += instance.OnSubmit;
                    @Submit.canceled += instance.OnSubmit;
                    @Cancel.started += instance.OnCancel;
                    @Cancel.performed += instance.OnCancel;
                    @Cancel.canceled += instance.OnCancel;
                    @Point.started += instance.OnPoint;
                    @Point.performed += instance.OnPoint;
                    @Point.canceled += instance.OnPoint;
                    @Click.started += instance.OnClick;
                    @Click.performed += instance.OnClick;
                    @Click.canceled += instance.OnClick;
                    @ScrollWheel.started += instance.OnScrollWheel;
                    @ScrollWheel.performed += instance.OnScrollWheel;
                    @ScrollWheel.canceled += instance.OnScrollWheel;
                    @MiddleClick.started += instance.OnMiddleClick;
                    @MiddleClick.performed += instance.OnMiddleClick;
                    @MiddleClick.canceled += instance.OnMiddleClick;
                    @RightClick.started += instance.OnRightClick;
                    @RightClick.performed += instance.OnRightClick;
                    @RightClick.canceled += instance.OnRightClick;
                }
            }
        }
        public UIActionMapActions @UIActionMap => new UIActionMapActions(this);
        private int m_KeyboardPlayerSchemeIndex = -1;
        public InputControlScheme KeyboardPlayerScheme
        {
            get
            {
                if (m_KeyboardPlayerSchemeIndex == -1) m_KeyboardPlayerSchemeIndex = asset.FindControlSchemeIndex("KeyboardPlayer");
                return asset.controlSchemes[m_KeyboardPlayerSchemeIndex];
            }
        }
        private int m_ControllerSchemeIndex = -1;
        public InputControlScheme ControllerScheme
        {
            get
            {
                if (m_ControllerSchemeIndex == -1) m_ControllerSchemeIndex = asset.FindControlSchemeIndex("Controller");
                return asset.controlSchemes[m_ControllerSchemeIndex];
            }
        }
        public interface IPlayerActionMapActions
        {
            void OnMoveAndAim(InputAction.CallbackContext context);
            void OnJump(InputAction.CallbackContext context);
            void OnSlash(InputAction.CallbackContext context);
            void OnSlashThrow(InputAction.CallbackContext context);
            void OnStabThrow(InputAction.CallbackContext context);
            void OnStab(InputAction.CallbackContext context);
            void OnKick(InputAction.CallbackContext context);
            void OnGuard(InputAction.CallbackContext context);
            void OnTaunt(InputAction.CallbackContext context);
            void OnAccelerate(InputAction.CallbackContext context);
        }
        public interface IUIActionMapActions
        {
            void OnNavigate(InputAction.CallbackContext context);
            void OnSubmit(InputAction.CallbackContext context);
            void OnCancel(InputAction.CallbackContext context);
            void OnPoint(InputAction.CallbackContext context);
            void OnClick(InputAction.CallbackContext context);
            void OnScrollWheel(InputAction.CallbackContext context);
            void OnMiddleClick(InputAction.CallbackContext context);
            void OnRightClick(InputAction.CallbackContext context);
        }
    }
}
